{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "properties": {
    "category": {
      "type": "string",
      "enum": [
        "バグ修正",
        "機能追加",
        "パフォーマンス改善",
        "セキュリティ対策",
        "リファクタリング",
        "テスト",
        "ドキュメンテーション",
        "インフラ改善",
        "ユーザーインターフェイス改善",
        "技術的負債解消",
        "バックアップと復元",
        "API設計・改善",
        "システム統合",
        "エラー対応",
        "自動化"
      ],
      "description": "課題の種類（例：バグ修正、機能追加など）"
    },
    "problemDescription": {
      "type": "string",
      "description": "課題の内容（ソフトウェアの不具合や新機能の概要など）"
    },
    "successCriteria": {
      "type": "string",
      "description": "解決したと言える条件（ソフトウェアの状態に基づく基準）"
    },
    "granularity": {
      "type": "string",
      "enum": ["大", "中", "小"],
      "description": "課題の粒度（大きな課題か小さな課題か）"
    },
    "progressTracking": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["未着手", "進行中", "完了"],
          "description": "課題の進捗状況"
        },
        "lastUpdate": {
          "type": "string",
          "format": "date-time",
          "description": "課題の最後の更新日時"
        },
        "milestones": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "milestone": {
                "type": "string",
                "description": "マイルストーンの名称（例：ユニットテスト完了、デプロイ準備完了など）"
              },
              "dueDate": {
                "type": "string",
                "format": "date-time",
                "description": "マイルストーンの期限"
              },
              "status": {
                "type": "string",
                "enum": ["未達成", "達成済み"],
                "description": "マイルストーンの達成状況"
              }
            },
            "required": ["milestone", "dueDate", "status"]
          },
          "description": "進捗を測るためのマイルストーン"
        }
      },
      "required": ["status", "lastUpdate"]
    },
    "resourcesAndConstraints": {
      "type": "object",
      "properties": {
        "constraints": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "課題解決の際の制約（例：既存システムとの互換性、リリーススケジュールなど）"
          },
          "description": "解決に対する制約条件"
        }
      },
      "required": []
    },
    "priority": {
      "type": "string",
      "enum": ["高", "中", "低"],
      "description": "課題の優先順位"
    },
    "risksAndBarriers": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "riskDescription": {
            "type": "string",
            "description": "リスクや障害の詳細（例：依存するライブラリの非互換性、テスト環境の整備など）"
          },
          "impact": {
            "type": "string",
            "description": "リスクが発生した場合の影響度（例：開発スケジュール遅延、品質低下）"
          },
          "mitigationStrategy": {
            "type": "string",
            "description": "リスク回避策（例：ライブラリのバージョン確認、テスト環境の整備）"
          }
        },
        "required": ["riskDescription", "impact"]
      },
      "description": "課題解決におけるリスクや障害"
    },
    "solutionSelection": {
      "type": "object",
      "properties": {
        "possibleSolutions": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "考えられる解決策（例：特定のライブラリをアップグレード、コードの最適化など）"
          },
          "description": "課題解決のための解決策"
        },
        "selectedSolution": {
          "type": "string",
          "description": "選択した解決策（例：特定のパフォーマンスチューニングを実施）"
        },
        "evaluationCriteria": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "解決策の評価基準（コスト、実行可能性、パフォーマンス向上など）"
          },
          "description": "解決策を選定するための評価基準"
        }
      },
      "required": ["possibleSolutions", "selectedSolution"]
    },
    "methodologies": {
      "type": "array",
      "items": {
        "type": "string",
        "enum": [
          "SMART目標設定法",
          "フィッシュボーンダイアグラム",
          "5W1H分析",
          "PDCAサイクル",
          "トライアングル法"
        ],
        "description": "使用する手法"
      },
      "description": "課題解決のために使用する手法"
    },
    "scope": {
      "type": "array",
      "items": {
        "type": "string",
        "enum": ["実装", "設定", "テスト", "デザイン", "調査", "ドキュメンテーション"],
        "description": "課題が対象とする範囲"
      },
      "description": "課題の作業対象範囲（実装、設定、テストなど）"
    },
    "gitBranch": {
      "type": "object",
      "properties": {
        "branchName": {
          "type": "string",
          "description": "課題解決に必要なGitブランチ名"
        },
        "baseBranch": {
          "type": "string",
          "description": "Gitブランチの元となるブランチ名（例：`develop`）"
        },
        "mergeTo": {
          "type": "string",
          "description": "Gitブランチのマージ先（基本はbaseBranchと同じ）"
        }
      },
      "description": "Gitブランチに関連する情報"
    }
  },
  "required": [
    "category",
    "problemDescription",
    "successCriteria",
    "granularity",
    "progressTracking",
    "priority",
    "risksAndBarriers",
    "solutionSelection",
    "methodologies",
    "scope",
    "gitBranch"
  ]
}
