# Breakdown CLI エントリーポイント型フロー
# mod.ts から runBreakdown までの基本的な実行フロー

# 核心的な型変換フロー
type_flow:
  name: "CLI Entry Point Flow"
  description: "CLIエントリーポイントの実行判定と委譲"

  steps:
    - step: 1
      from: "import.meta.main"
      to: "execution_decision"
      operation: "実行コンテキスト判定"
      principle: "boolean条件による完全な分岐"

    - step: 2
      from: "execution_decision"
      to: "runBreakdown()"
      operation: "CLI実行の委譲"
      principle: "責務の分離"

# 主要型
key_types:
  ImportMeta:
    pattern: "Runtime Context Check"
    responsibility: "実行モード判定（直接実行 vs モジュールインポート）"

  ModuleInterface:
    pattern: "Export Interface"
    responsibility: "JSRパッケージとしてのAPI公開"

# 設計パターン
patterns:
  facade: "mod.ts が CLI実装を隠蔽"
  dynamic_loading: "必要時のみCLI実装をロード"
  separation: "エントリーポイントと実装の分離"

# 境界
boundaries:
  scope: "mod.ts エントリーポイント"
  next_phase: "CLI引数解析"
  responsibility: "実行コンテキスト判定とCLI委譲"
