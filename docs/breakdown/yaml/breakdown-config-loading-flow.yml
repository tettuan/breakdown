# Breakdown 設定読み込み型フロー
# 設定プロファイル名から設定オブジェクトへの変換

# 核心的な型変換フロー
type_flow:
  name: "Configuration Loading Flow"
  description: "設定プロファイル名から設定オブジェクトへの変換"
  
  steps:
    - step: 1
      from: "string | null (profile name)"
      to: "Record<string, unknown>"
      operation: "loadBreakdownConfig()"
      principle: "BreakdownConfig による設定統合"
      
    - step: 2
      from: "Record<string, unknown>"
      to: "Result<CustomConfig | undefined, ConfigError>"
      operation: "ParamsCustomConfig.create()"
      principle: "設定の型安全な変換"

# 主要型
key_types:
  BreakdownConfig:
    pattern: "External Library"
    responsibility: "app.yml と user.yml の統合読み込み"
    result_type: "{ success: boolean, data?: BreakdownConfig }"
    
  ParamsCustomConfig:
    pattern: "Smart Constructor"
    responsibility: "設定オブジェクトの型安全な変換"
    return_pattern: "Result<CustomConfig | undefined, ConfigError>"
    
  ConfigError:
    pattern: "Error as Value"
    responsibility: "設定エラーの型表現"
    properties: "message, code"

# 設定読み込みプロセス
loading_process:
  profile_handling:
    - "null → undefined 変換（BreakdownConfig API互換）"
    - "プロファイル名による設定ファイル特定"
    - "app.yml と user.yml の統合"
    
  error_handling:
    - "設定ファイル不存在 → 警告表示 + 空オブジェクト"
    - "YAML解析エラー → ConfigError"
    - "設定不在 → undefined返却"

