version: 2.1

orbs:
  deno: denoland/deno@1.0.0

jobs:
  analyze:
    docker:
      - image: denoland/deno:latest
    steps:
      - checkout
      
      - run:
          name: Install Breakdown
          command: |
            deno install -A -n breakdown https://deno.land/x/breakdo../cli/breakdown.ts
            echo 'export PATH="$HOME/.deno/bin:$PATH"' >> $BASH_ENV
      
      - run:
          name: Analyze Code Changes
          command: |
            if [ -n "$CIRCLE_PULL_REQUEST" ]; then
              git diff origin/main..HEAD > changes.diff
              breakdown defect project --from=changes.diff -o=analysis/defects.md
              breakdown summary project --from=changes.diff -o=analysis/summary.md
            fi
      
      - store_artifacts:
          path: analysis
          destination: breakdown-analysis

  document:
    docker:
      - image: denoland/deno:latest
    steps:
      - checkout
      
      - run:
          name: Install Breakdown
          command: |
            deno install -A -n breakdown https://deno.land/x/breakdo../cli/breakdown.ts
            echo 'export PATH="$HOME/.deno/bin:$PATH"' >> $BASH_ENV
      
      - run:
          name: Generate Documentation
          command: |
            # Generate project documentation
            breakdown to project --from=README.md \
              --uv-build_num="$CIRCLE_BUILD_NUM" \
              --uv-branch="$CIRCLE_BRANCH" \
              -o=docs/project.md
            
            # Generate issue tracking
            find . -name "*.md" | xargs grep -l "TODO\|FIXME" | \
            xargs cat | breakdown to issue -o=docs/issues/
      
      - persist_to_workspace:
          root: docs
          paths:
            - "*"

  report:
    docker:
      - image: denoland/deno:latest
    steps:
      - checkout
      - attach_workspace:
          at: docs
      
      - run:
          name: Generate Quality Report
          command: |
            echo "# Build Quality Report" > report.md
            echo "Build: $CIRCLE_BUILD_NUM" >> report.md
            echo "Branch: $CIRCLE_BRANCH" >> report.md
            echo "" >> report.md
            
            # Add metrics
            TODO_COUNT=$(grep -r "TODO" . | wc -l || echo 0)
            echo "## Metrics" >> report.md
            echo "- TODO items: $TODO_COUNT" >> report.md
            
            cat report.md
      
      - store_test_results:
          path: test-results

workflows:
  version: 2
  build-and-analyze:
    jobs:
      - analyze
      - document:
          requires:
            - analyze
      - report:
          requires:
            - document
