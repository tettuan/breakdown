diff --git a/draft/2025/06/20250621-fix-example.ja.md b/draft/2025/06/20250621-fix-example.ja.md
index bc4bb4c..d8e9a6c 100644
--- a/draft/2025/06/20250621-fix-example.ja.md
+++ b/draft/2025/06/20250621-fix-example.ja.md
@@ -25,13 +25,13 @@
 
 ```yml
 - 信じて良い前提: Breakdown本体はテストをpassして正常に動作する
-- 作業リスト: `20250621-fix-example-checklist.ja.md` をタスクリストとする
+- 作業リスト: `tmp/tmp/template_error_cases.md` をタスクリストとする
 - タスク: examples/ 配下のスクリプトを順序よく1つずつ実行する。実行結果を tmp/example_results/ へ保存する。1実行1結果保存。
 - 解決すべき課題: 
-  - テンプレート問題: 実行の前にtwoパラメータの組み合わせで、テンプレートを作成する
-  - "find bugs機能未有効化": 設定をapp.ymlで行わず、user.ymlで行う
-  - "タイムアウト問題": STDINが渡されていないのに、STDIN待ちになる箇所を洗い出す
-  - "タイムアウト問題解消の改修": STDIN読み取りを即座に判定する責務を持ったクラスへ判定を移譲する
+  - テンプレート問題: 作業リストに記載のテンプレートを、各スクリプトの実行前に作成する。コピー元がない場合は新規に内容を作成して保存する。
+  - 設定ファイル問題: 設定ファイルを `../.agent/breakdown/config/` (親ディレクトリ) に作成しているものを `./.agent/breakdown/config/` へ揃える
+  - CWD移動問題: 各スクリプトの開始時に examples へ移動し、実行後に必ず元のディレクトリへ戻る処理があること
+  - 設定ファイルの構造問題: base_dir や working_dir の指定が、./ 配下になっていること
 - ゴール: エラーになる example が修正され、全て成功した
 ```
 
@@ -50,7 +50,7 @@
 
 以下の3点です。
 
-- 存在する examples/* を0から順番に実行した結果、最後までエラーなく完了する
+- 存在する examples/* を0から順番に実行した結果、最後までテンプレートエラーなく完了する
 - lib/, tests/ のテストが全て pass する
 - `deno task ci` が1つのエラーもなく成功する
 
diff --git a/draft/2025/06/20250621-fix-timeout.ja.md b/draft/2025/06/20250621-fix-timeout.ja.md
index b45e04e..697bf7f 100644
--- a/draft/2025/06/20250621-fix-timeout.ja.md
+++ b/draft/2025/06/20250621-fix-timeout.ja.md
@@ -25,8 +25,13 @@
 
 ```yml
 - 信じて良い前提: Breakdown本体はテストをpassして正常に動作する
-- 作業リスト: 
-- タスク: 
+- 作業リスト: |
+    1. ⏱️ 12_summary_issue.sh |
+    2. ⏱️ 14_custom_variables.sh |
+    3. ⏱️ 15_pipeline_processing.sh |
+    4. ⏱️ 18_cicd_integration.sh
+
+- タスク: タイムアウトの調査
 - 解決すべき課題: 
   - "タイムアウト問題": STDINが渡されていないのに、STDIN待ちになる箇所を洗い出す
 - ゴール: エラーになる example が修正され、全て成功した
diff --git a/examples/05_basic_usage.sh b/examples/05_basic_usage.sh
index 68a659d..115be65 100755
--- a/examples/05_basic_usage.sh
+++ b/examples/05_basic_usage.sh
@@ -45,7 +45,7 @@ Build a modern e-commerce platform with user management, product catalog, and pa
 - Admin dashboard
 EOF
 
-cat "$OUTPUT_DIR/project_spec.md" | $BREAKDOWN to issue --destination="$OUTPUT_DIR/issues/"
+cat "$OUTPUT_DIR/project_spec.md" | $BREAKDOWN to issue --config=default --destination="$OUTPUT_DIR/issues/"
 echo "✅ Created issue breakdowns in $OUTPUT_DIR/issues/"
 echo
 
@@ -63,7 +63,7 @@ mobile responsive design issues on tablets
 EOF
 
 echo "Processing messy notes into organized summary..."
-cat "$OUTPUT_DIR/messy_notes.md" | $BREAKDOWN summary task --destination="$OUTPUT_DIR/task_summary.md"
+cat "$OUTPUT_DIR/messy_notes.md" | $BREAKDOWN summary task --config=default --destination="$OUTPUT_DIR/task_summary.md"
 echo "✅ Created task summary at $OUTPUT_DIR/task_summary.md"
 echo
 
@@ -79,7 +79,7 @@ cat > "$OUTPUT_DIR/error_log.txt" << EOF
 2024-01-15 10:29:30 ERROR: Concurrent modification exception in ShoppingCart
 EOF
 
-tail -20 "$OUTPUT_DIR/error_log.txt" | $BREAKDOWN defect project --destination="$OUTPUT_DIR/defect_analysis.md"
+tail -20 "$OUTPUT_DIR/error_log.txt" | $BREAKDOWN defect project --config=default --destination="$OUTPUT_DIR/defect_analysis.md"
 echo "✅ Created defect analysis at $OUTPUT_DIR/defect_analysis.md"
 echo
 
@@ -110,7 +110,7 @@ function authenticate(user, pass) {
 EOF
 
 # Using defect task for bug-related analysis (always available)
-cat "$OUTPUT_DIR/buggy_code.md" | $BREAKDOWN defect task --destination="$OUTPUT_DIR/bugs_report.md"
+cat "$OUTPUT_DIR/buggy_code.md" | $BREAKDOWN defect task --config=default --destination="$OUTPUT_DIR/bugs_report.md"
 echo "✅ Created defect analysis at $OUTPUT_DIR/bugs_report.md"
 
 echo
diff --git a/examples/12_summary_issue.sh b/examples/12_summary_issue.sh
index 34e4a46..a70b51b 100755
--- a/examples/12_summary_issue.sh
+++ b/examples/12_summary_issue.sh
@@ -58,10 +58,10 @@ echo
 
 # Run summary issue command
 echo "実行コマンド:"
-echo "breakdown summary issue --from=$OUTPUT_DIR/messy_tasks.md --input=task -o=$OUTPUT_DIR/issue_summary.md"
+echo "breakdown summary issue --config=default --from=$OUTPUT_DIR/messy_tasks.md --input=task -o=$OUTPUT_DIR/issue_summary.md"
 echo
 
-if $BREAKDOWN summary issue --from="$OUTPUT_DIR/messy_tasks.md" --input=task -o="$OUTPUT_DIR/issue_summary.md"; then
+if $BREAKDOWN summary issue --config=default --from="$OUTPUT_DIR/messy_tasks.md" --input=task -o="$OUTPUT_DIR/issue_summary.md"; then
     echo "✅ Issue summary created successfully!"
     echo
     echo "生成されたファイル:"
diff --git a/examples/13_defect_patterns.sh b/examples/13_defect_patterns.sh
index cff290e..2a6290f 100755
--- a/examples/13_defect_patterns.sh
+++ b/examples/13_defect_patterns.sh
@@ -66,7 +66,7 @@ cat > "$OUTPUT_DIR/bug_report.md" << 'EOF'
 EOF
 
 echo "実行: breakdown defect issue < bug_report.md"
-$BREAKDOWN defect issue < "$OUTPUT_DIR/bug_report.md" > "$OUTPUT_DIR/defect_issue_analysis.md"
+$BREAKDOWN defect issue --config=default < "$OUTPUT_DIR/bug_report.md" > "$OUTPUT_DIR/defect_issue_analysis.md"
 
 echo
 echo "=== Example 2: Defect Task Analysis ==="
@@ -101,7 +101,7 @@ cat > "$OUTPUT_DIR/improvement_request.md" << 'EOF'
 EOF
 
 echo "実行: breakdown defect task < improvement_request.md"
-$BREAKDOWN defect task < "$OUTPUT_DIR/improvement_request.md" > "$OUTPUT_DIR/defect_task_analysis.md"
+$BREAKDOWN defect task --config=default < "$OUTPUT_DIR/improvement_request.md" > "$OUTPUT_DIR/defect_task_analysis.md"
 
 echo
 echo "=== 生成されたファイル ==="
diff --git a/examples/15_pipeline_processing.sh b/examples/15_pipeline_processing.sh
index fc42f4e..18e39f5 100755
--- a/examples/15_pipeline_processing.sh
+++ b/examples/15_pipeline_processing.sh
@@ -34,7 +34,7 @@ echo "=== Example 1: Git差分からの変更サマリー ==="
 if [ -d ../.git ]; then
     echo "最近のコミットメッセージから変更サマリーを生成:"
     git log --oneline -10 | grep -E "(feat|fix|refactor):" | head -5 > "$OUTPUT_DIR/recent_commits.txt"
-    cat "$OUTPUT_DIR/recent_commits.txt" | $BREAKDOWN summary project -o="$OUTPUT_DIR/git_summary.md"
+    cat "$OUTPUT_DIR/recent_commits.txt" | $BREAKDOWN summary project --config=default -o="$OUTPUT_DIR/git_summary.md"
     echo "✅ Git変更サマリー生成完了: $OUTPUT_DIR/git_summary.md"
 else
     echo "⚠️  Gitリポジトリではないためスキップ"
@@ -54,7 +54,7 @@ EOF
 done
 
 echo "複数のモジュールドキュメントを集約:"
-cat "$OUTPUT_DIR/module_"*.md | $BREAKDOWN summary project \
+cat "$OUTPUT_DIR/module_"*.md | $BREAKDOWN summary project --config=default \
     --uv-project_name="統合モジュール" \
     -o="$OUTPUT_DIR/modules_summary.md"
 echo "✅ モジュール統合サマリー生成完了"
@@ -71,10 +71,10 @@ cat > "$OUTPUT_DIR/error.log" << 'EOF'
 EOF
 
 echo "Step 1: エラーログから欠陥分析"
-cat "$OUTPUT_DIR/error.log" | $BREAKDOWN defect -o="$OUTPUT_DIR/defect_analysis.md"
+cat "$OUTPUT_DIR/error.log" | $BREAKDOWN defect task --config=default -o="$OUTPUT_DIR/defect_analysis.md"
 
 echo "Step 2: 欠陥分析からイシュー生成"
-$BREAKDOWN issue --from="$OUTPUT_DIR/defect_analysis.md" -o="$OUTPUT_DIR/error_issues.md"
+$BREAKDOWN to issue --config=default --from="$OUTPUT_DIR/defect_analysis.md" -o="$OUTPUT_DIR/error_issues.md"
 
 echo "✅ エラーログ分析パイプライン完了"
 
@@ -90,7 +90,7 @@ find . -name "README*.md" -type f | head -3 | while read file; do
 done
 
 if [ -f "$OUTPUT_DIR/all_readmes.md" ]; then
-    $BREAKDOWN summary project --from="$OUTPUT_DIR/all_readmes.md" \
+    $BREAKDOWN summary project --config=default --from="$OUTPUT_DIR/all_readmes.md" \
         -o="$OUTPUT_DIR/readme_summary.md"
     echo "✅ README統合サマリー生成完了"
 fi
@@ -102,7 +102,7 @@ echo "2つの異なる入力を同時に処理:"
 
 # 仮想的なシステム状態レポート
 echo "システム状態の差分分析:"
-$BREAKDOWN summary task <(echo "CPU: 80%, Memory: 4GB, Disk: 50%") \
+$BREAKDOWN summary task --config=default <(echo "CPU: 80%, Memory: 4GB, Disk: 50%") \
     --uv-report_type="システム状態" \
     -o="$OUTPUT_DIR/system_status.md"
 
diff --git a/examples/prompts/production/defect/issue/f_issue.md b/examples/prompts/production/defect/issue/f_issue.md
deleted file mode 100644
index 5a9bd94..0000000
--- a/examples/prompts/production/defect/issue/f_issue.md
+++ /dev/null
@@ -1,135 +0,0 @@
-# Production Issue Detection Template
-
-## Input
-- {production_logs}
-- {monitoring_data}
-- {user_reports}
-- {error_traces}
-
-## Output
-- {issue_analysis}
-- {severity_assessment}
-- {incident_report}
-
----
-
-## Production Issue Analysis
-
-### Critical Issue Detection
-- **Service Outages**: Complete system unavailability
-- **Data Corruption**: Data integrity violations
-- **Security Breaches**: Unauthorized access or data leaks
-- **Performance Degradation**: Response times > SLA
-- **Financial Impact**: Revenue-affecting issues
-
-### Issue Classification
-
-#### Severity Levels
-| Level | Description | Response Time | Example |
-|-------|-------------|---------------|----------|
-| P0 | Critical/Outage | < 15 min | Total service down |
-| P1 | High/Degraded | < 1 hour | Major feature broken |
-| P2 | Medium | < 4 hours | Minor feature issue |
-| P3 | Low | < 24 hours | Cosmetic/enhancement |
-
-#### Impact Assessment
-- **User Impact**: Number of affected users
-- **Business Impact**: Revenue/reputation damage
-- **System Impact**: Infrastructure affected
-- **Data Impact**: Data integrity concerns
-
-### Root Cause Analysis Framework
-
-1. **Immediate Cause**: What directly triggered the issue
-2. **Contributing Factors**: What conditions allowed it
-3. **Root Cause**: Why the system permitted this failure
-4. **Systemic Issues**: Process or design flaws
-
-### Production Monitoring Indicators
-```yaml
-error_patterns:
-  - HTTP 5xx errors
-  - Database connection failures
-  - Memory leak indicators
-  - CPU spike patterns
-  - Disk space exhaustion
-  - Network connectivity issues
-```
-
-### Incident Response Process
-
-#### Immediate Actions (0-15 minutes)
-1. Acknowledge incident
-2. Assess severity
-3. Activate incident response team
-4. Implement immediate containment
-
-#### Investigation (15-60 minutes)
-1. Gather diagnostic data
-2. Identify affected systems
-3. Determine root cause
-4. Develop fix/workaround
-
-#### Resolution (1-4 hours)
-1. Implement fix
-2. Verify resolution
-3. Monitor for recurrence
-4. Update stakeholders
-
-### Communication Templates
-
-#### Internal Alert
-```
-SEVERITY: [P0/P1/P2/P3]
-SYSTEM: [Affected System]
-SUMMARY: [Brief description]
-IMPACT: [User/business impact]
-STATUS: [Investigating/Identified/Resolving/Resolved]
-ETA: [Expected resolution time]
-COMMAND CENTER: [Incident response channel]
-```
-
-#### Customer Communication
-```
-We are currently experiencing [brief description].
-Affected services: [list]
-We are actively working on a resolution.
-Updates will be provided every [frequency].
-For support: [contact information]
-```
-
-## Instructions
-
-1. **Rapid Assessment**: Quickly determine severity and impact
-2. **Evidence Collection**: Gather logs, metrics, and user reports
-3. **Timeline Reconstruction**: Map when issues started and escalated
-4. **Impact Analysis**: Quantify user and business impact
-5. **Root Cause Investigation**: Use systematic debugging approach
-6. **Resolution Planning**: Develop both immediate and long-term fixes
-7. **Prevention Strategy**: Identify monitoring and process improvements
-
-## Output Format
-
-### Executive Summary
-- Issue severity and current status
-- User impact and affected systems
-- Timeline and resolution ETA
-- Key stakeholders and communication channels
-
-### Technical Analysis
-- Detailed error logs and stack traces
-- System metrics and performance data
-- Configuration changes or deployments
-- Dependencies and external service status
-
-### Action Plan
-- Immediate remediation steps
-- Long-term prevention measures
-- Monitoring improvements
-- Process refinements
-
-### Post-Incident Report
-- Complete timeline of events
-- Root cause analysis
-- Lessons learned
-- Action items with owners and due dates
\ No newline at end of file
diff --git a/examples/prompts/summary/project/f_project.md b/examples/prompts/summary/project/f_project.md
deleted file mode 100644
index 80b4588..0000000
--- a/examples/prompts/summary/project/f_project.md
+++ /dev/null
@@ -1,29 +0,0 @@
-# Project Summary Prompt
-
-This prompt helps create comprehensive project summaries.
-
-## Input
-{input_text}
-
-## Output
-The output should be a structured project summary with:
-- Project status overview
-- Progress on key objectives
-- Deliverable status
-- Technical achievements
-- Timeline assessment
-- Resource utilization
-- Dependency status
-- Risk assessment
-- Next steps
-
-## Instructions
-1. Analyze project documentation
-2. Assess progress on objectives
-3. Review deliverable status
-4. Evaluate technical progress
-5. Compare timeline estimates
-6. Review resource usage
-7. Check dependency status
-8. Update risk assessment
-9. Identify action items 
\ No newline at end of file
diff --git a/lib/breakdown/prompts/defect/issue/f_issue.md b/lib/breakdown/prompts/defect/issue/f_issue.md
index 0519ecb..06d249f 100644
--- a/lib/breakdown/prompts/defect/issue/f_issue.md
+++ b/lib/breakdown/prompts/defect/issue/f_issue.md
@@ -1 +1,27 @@
- 
\ No newline at end of file
+# Issue Defect Analysis Template
+
+## Input
+- {input_text_file}
+- {input_text}
+
+## Output
+- {destination_path}
+
+---
+
+## Analysis Perspectives
+- Overview of the defect that occurred
+- Source, environment, and reproduction steps
+- Related systems and components
+- Known error patterns
+- Missing information to be specified
+- Improvement requests and fixes
+
+## Instructions
+1. Analyze the input information according to the above perspectives.
+2. Create a section for each perspective and organize the information.
+3. Clearly indicate any missing information as "Missing Information".
+4. Always use template variables.
+
+## Output Format
+- Output as structured Markdown according to the issue defect schema.
\ No newline at end of file
diff --git a/tests/helpers/setup.ts b/tests/helpers/setup.ts
index 5f8c8d3..c1d95c8 100644
--- a/tests/helpers/setup.ts
+++ b/tests/helpers/setup.ts
@@ -246,7 +246,7 @@ export async function globalTestCleanup(): Promise<void> {
           logger.debug("Skipping example_results directory", { path: join(tmpDir, entry.name) });
           continue;
         }
-        
+
         const entryPath = join(tmpDir, entry.name);
         try {
           await Deno.remove(entryPath, { recursive: true });
